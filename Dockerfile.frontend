# Dockerfile pour le frontend Blazor WebAssembly

# Étape de build
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copier les fichiers csproj et restaurer les dépendances
COPY ["ProductApp.Client/ProductApp.Client.csproj", "ProductApp.Client/"]
RUN dotnet restore "ProductApp.Client/ProductApp.Client.csproj"

# Copier le reste du code et construire l'application
COPY ["ProductApp.Client/", "ProductApp.Client/"]
WORKDIR "/src/ProductApp.Client"
RUN dotnet build "ProductApp.Client.csproj" -c Release -o /app/build

# Étape de publication
FROM build AS publish
RUN dotnet publish "ProductApp.Client.csproj" -c Release -o /app/publish

# Étape finale avec Nginx pour servir les fichiers statiques
FROM nginx:alpine AS final
WORKDIR /usr/share/nginx/html

# Copier les fichiers publiés de Blazor WebAssembly
COPY --from=publish /app/publish/wwwroot .

# Copier la configuration Nginx personnalisée
COPY nginx.conf /etc/nginx/nginx.conf

# Exposer le port 80
EXPOSE 80

# Commande pour démarrer Nginx
CMD ["nginx", "-g", "daemon off;"]
